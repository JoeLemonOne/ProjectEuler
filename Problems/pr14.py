"""
Следующая повторяющаяся последовательность определена для множества натуральных чисел:
n → n/2 (n - четное)
n → 3n + 1 (n - нечетное)
Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:
13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
Получившаяся последовательность (начиная с 13 и заканчивая 1) содержит 10 элементов. Хотя это до сих пор и не доказано (проблема Коллатца (Collatz)), предполагается, что все сгенерированные таким образом последовательности оканчиваются на 1.
Какой начальный элемент меньше миллиона генерирует самую длинную последовательность?
Примечание: Следующие за первым элементы последовательности могут быть больше миллиона.
"""

i = 1
max_subsequence = [1, 1]

while i < 1000001:
    n = 1
    number = i
    subsequence = [number]
    while n == 1:
        if number % 2 == 0:
            number = int(number / 2)
        else:
            number = 3 * number + 1
        subsequence.append(number)
        if number == 1:
            n = 0
    if i % 10000 == 0:
        print(i)
    if len(subsequence) > max_subsequence[1]:
        max_subsequence[0] = i
        max_subsequence[1] = len(subsequence)
    i += 1

print(max_subsequence)
